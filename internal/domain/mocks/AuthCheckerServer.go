// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	session "2023_2_Holi/domain/grpc/session"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AuthCheckerServer is an autogenerated mock type for the AuthCheckerServer type
type AuthCheckerServer struct {
	mock.Mock
}

// IsAuth provides a mock function with given fields: _a0, _a1
func (_m *AuthCheckerServer) IsAuth(_a0 context.Context, _a1 *session.Token) (*session.UserID, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *session.UserID
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *session.Token) (*session.UserID, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *session.Token) *session.UserID); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*session.UserID)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *session.Token) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAuthCheckerServer provides a mock function with given fields:
func (_m *AuthCheckerServer) mustEmbedUnimplementedAuthCheckerServer() {
	_m.Called()
}

// NewAuthCheckerServer creates a new instance of AuthCheckerServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthCheckerServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthCheckerServer {
	mock := &AuthCheckerServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
