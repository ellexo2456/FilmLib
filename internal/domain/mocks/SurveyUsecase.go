// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	domain "2023_2_Holi/domain"

	mock "github.com/stretchr/testify/mock"
)

// SurveyUsecase is an autogenerated mock type for the SurveyUsecase type
type SurveyUsecase struct {
	mock.Mock
}

// AddSurvey provides a mock function with given fields: survey
func (_m *SurveyUsecase) AddSurvey(survey domain.Survey) error {
	ret := _m.Called(survey)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.Survey) error); ok {
		r0 = rf(survey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CheckSurvey provides a mock function with given fields: survey
func (_m *SurveyUsecase) CheckSurvey(survey domain.Survey) (bool, error) {
	ret := _m.Called(survey)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(domain.Survey) (bool, error)); ok {
		return rf(survey)
	}
	if rf, ok := ret.Get(0).(func(domain.Survey) bool); ok {
		r0 = rf(survey)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(domain.Survey) error); ok {
		r1 = rf(survey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSurveyUsecase creates a new instance of SurveyUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSurveyUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *SurveyUsecase {
	mock := &SurveyUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
